"use strict";(self.webpackChunkeasybutton_docs=self.webpackChunkeasybutton_docs||[]).push([[828],{4222:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"on-sequence-example","title":"Detecting Sequence","description":"The following example demonstrate how to detect a sequence of presses.","source":"@site/docs/on-sequence-example.md","sourceDirName":".","slug":"/on-sequence-example","permalink":"/docs/on-sequence-example","draft":false,"unlisted":false,"editUrl":"https://github.com/evert-arias/easybutton-website/docs/on-sequence-example.md","tags":[],"version":"current","frontMatter":{"id":"on-sequence-example","title":"Detecting Sequence","sidebar_label":"Detecting Sequence"},"sidebar":"examples","previous":{"title":"Pressed For Duration","permalink":"/docs/on-pressed-for-duration-example"}}');var s=t(4848),r=t(8453);const c={id:"on-sequence-example",title:"Detecting Sequence",sidebar_label:"Detecting Sequence"},i=void 0,a={},u=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The following example demonstrate how to detect a sequence of presses."}),"\n",(0,s.jsxs)(n.p,{children:["Download ",(0,s.jsx)(n.a,{href:"https://github.com/evert-arias/EasyButton/blob/master/examples",children:"source code"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'#include <EasyButton.h>\n\n// Arduino pin number where the button is connected.\n#define BUTTON_PIN 26\n\n// Number of presses.\nint presses = 5;\n// Timeout.\n\nint timeout = 2000;\n\n// Duration.\nint duration = 2000;\n\n// Button.\nEasyButton button(BUTTON_PIN);\n\n// Callback.\nvoid onSequenceMatched() {\n  Serial.println("Sequence matched");\n}\n\nvoid setup() {\n    Serial.begin(115200);\n\n  \t// Initialize the button.\n  \tbutton.begin();\n\n  \t// Attach callback.\n  \tbutton.onSequence(presses, timeout, onSequenceMatched);\n}\n\nvoid loop() {\n    // Continuously update the button state.\n  \tbutton.read();\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{title:"Work on progress",type:"important",children:(0,s.jsx)(n.p,{children:"We are currently working on this section."})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var o=t(6540);const s={},r=o.createContext(s);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);